name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Update dependencies and security
      run: |
        npm ci
        npm audit fix --audit-level moderate
        npx update-browserslist-db@latest
      
    - name: Build application for production
      run: |
        npm run build
        
    - name: Add build timestamp
      run: |
        echo "<!-- Build timestamp: $(date -u +%Y-%m-%dT%H:%M:%SZ) -->" >> dist/index.html
        
    - name: Verify build contains recent changes
      run: |
        if [ ! -f "dist/index.html" ]; then
          echo "Build failed - no index.html found"
          exit 1
        fi
        # Check build timestamp
        BUILD_TIME=$(stat -c %Y dist/index.html)
        CURRENT_TIME=$(date +%s)
        AGE=$((CURRENT_TIME - BUILD_TIME))
        if [ $AGE -gt 300 ]; then
          echo "Warning: Build seems old (${AGE}s), but continuing..."
        fi
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
            cd /var/www/avswebsite
            git pull origin main
            
            # Update dependencies and fix security issues
            npm ci
            npm audit fix --audit-level moderate || true
            npx update-browserslist-db@latest || true
            
            # Build with production optimizations
            npm run build
            
            # Add cache busting for static assets
            TIMESTAMP=$(date +%s)
            find dist -name "*.js" -o -name "*.css" | head -5 | while read file; do
              echo "Built: $(basename "$file") at $(date)"
            done
            
            # Update nginx configuration
            sudo cp nginx.conf /etc/nginx/sites-available/avs.ma.conf
            sudo nginx -t && sudo systemctl reload nginx
            
            # Set correct permissions
            sudo chown -R appuser:www-data /var/www/avswebsite
            sudo find /var/www/avswebsite -type d -exec chmod 755 {} \;
            sudo find /var/www/avswebsite -type f -exec chmod 644 {} \;
            
            # Restart PM2 processes with zero downtime
            pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
            pm2 save
            
            # Clean up old builds and logs
            find /var/www/avswebsite -name "*.log" -mtime +7 -delete || true
            npm cache clean --force || true
          
    - name: Advanced Health Check
      run: |
        echo "Waiting for deployment to settle..."
        sleep 30
        
        # Basic connectivity check
        if ! curl -f -s https://avs.ma > /dev/null; then
          echo "❌ Basic connectivity failed"
          exit 1
        fi
        
        # Content verification check
        RESPONSE=$(curl -s https://avs.ma)
        if echo "$RESPONSE" | grep -q "AVS"; then
          echo "✅ Content verification passed - website contains expected content"
        else
          echo "⚠️ Content verification warning - AVS content not found"
        fi
        
        # Cache busting check
        CACHE_BUST=$(date +%s)
        curl -s "https://avs.ma?cb=$CACHE_BUST" > /dev/null
        echo "✅ Cache busting request sent"
        
        echo "✅ Deployment health check completed successfully"